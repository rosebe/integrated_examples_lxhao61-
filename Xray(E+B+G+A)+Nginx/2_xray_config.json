{
  "log": {
    "loglevel": "warning",
    "error": "/var/log/xray/error.log",
    "access": "/var/log/xray/access.log"
  },
  "inbounds": [
    {
      "port": 443, //监听端口
      "protocol": "vless",
      "settings": {
        "clients": [
          {
            "id": "048e0bf2-dd56-11e9-aa37-5600024c1d6a", //修改为自己的 UUID
            "flow": "xtls-rprx-vision", //启用 XTLS Vision
            "email": "443@gmail.com"
          }
        ],
        "decryption": "none",
        "fallbacks": [
          {
            "path": "/HALdGZ9k", //通过路径分流
            "dest": "@uds2001", //分流后转给 VMess+WebSocket 监听进程
            "xver": 2 //开启 PROXY protocol 发送，发送真实来源 IP 和端口给如下 VMess+WebSocket 应用。 1 或 2 表示 PROXY protocol 版本。
          },
          {
            "alpn": "h2", //h2 回落匹配
            "dest": "/dev/shm/uds82.sock", //h2 回落进程
            "xver": 2 //开启 PROXY protocol 发送，发送真实来源 IP 和端口给 Nginx。 1 或 2 表示 PROXY protocol 版本。
          }, //对应 Nginx 版本小于 v1.25.1 配置，否则此部分必须删除。
          {
            "dest": "/dev/shm/uds81.sock", //http/1.1 回落进程
            "xver": 2 //开启 PROXY protocol 发送，发送真实来源 IP 和端口给 Nginx。 1 或 2 表示 PROXY protocol 版本。
          } //对应 Nginx 版本小于 v1.25.1 配置，否则此部分必须删除。
          {
            "dest": "/dev/shm/uds88.sock", //h2 回落与 http/1.1 回落共用进程
            "xver": 2 //开启 PROXY protocol 发送，发送真实来源 IP 和端口给 Nginx。 1 或 2 表示 PROXY protocol 版本。
          } //对应 Nginx 版本不小于 v1.25.1 配置，否则此部分必须删除。
        ]
      },
      "streamSettings": {
        "network": "tcp",
        "security": "tls",
        "tlsSettings": {
          "certificates": [
            {
              "ocspStapling": 3600,
              "certificateFile": "/home/tls/z1.xx.yy/z1.xx.yy.crt", //换成自己的证书，绝对路径。
              "keyFile": "/home/tls/z1.xx.yy/z1.xx.yy.key" //换成自己的密钥，绝对路径。
            },
            {
              "ocspStapling": 3600,
              "certificateFile": "/home/tls/z2.xx.yy/z2.xx.yy.crt", //换成自己的证书，绝对路径。
              "keyFile": "/home/tls/z2.xx.yy/z2.xx.yy.key" //换成自己的密钥，绝对路径。
            } //若使用通配符证书或 SAN 证书，合并一组即可。
          ],
          "rejectUnknownSni": true, //限定域名连接（包括禁止以 IP 方式访问网站）
          "minVersion": "1.2"
        }
      },
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "listen": "@uds2001", //VMess+WebSocket 监听进程
      "protocol": "vmess",
      "settings": {
        "clients": [
          {
            "id": "21376258-dd56-11e9-aa37-5600024c1d6a", //修改为自己的 UUID
            "email": "2001@gmail.com"
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "security": "none",
        "wsSettings": {
          "acceptProxyProtocol": true, //开启 PROXY protocol 接收，接收 VLESS+Vision+TLS 分流前真实来源 IP 和端口。
          "path": "/HALdGZ9k" //修改为自己的路径
        }
      },
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "listen": "127.0.0.1", //只监听本机，避免本机外的机器探测到下面端口。
      "port": 2011, //Shadowsocks+gRPC 监听端口
      "protocol": "shadowsocks",
      "settings": {
        "method": "2022-blake3-chacha20-poly1305",
        "password": "3FezOkwhvB5vb3y25C13IYYtM6KbI37EjbX0lLlx7oo=", //修改为自己的密钥
        "email": "2011@gmail.com"
      },
      "streamSettings": {
        "network": "grpc",
        "security": "none",
        "grpcSettings": {
          "serviceName": "SALdGZ9k" //修改为自己的 gRPC 服务名称
        }
      },
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "port": 2052, //监听端口
      "protocol": "vless",
      "settings": {
        "clients": [
          {
            "id": "0a652466-dd56-11e9-aa37-5600024c1d6a", //修改为自己的 UUID
            "email": "2052@gmail.com"
          }
        ],
        "decryption": "none"
      },
      "streamSettings": {
        "network": "kcp",
        "security": "none",
        "kcpSettings": {
          "uplinkCapacity": 100,
          "downlinkCapacity": 100,
          "congestion": true, //启用拥塞控制
          "seed": "60VoqhfjP79nBQyU" //修改为自己的混淆密码
        }
      },
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    }
  ],
  "routing": {
    "rules": [
      {
        "type": "field",
        "protocol": [
          "bittorrent"
        ],
        "outboundTag": "blocked"
      }
    ]
  },
  "outbounds": [
    {
      "protocol": "freedom",
      "settings": {}
    },
    {
      "tag": "blocked",
      "protocol": "blackhole",
      "settings": {}
    }
  ]
}
//备注：
//1、本示例使用 XTLS Vision 配置（z1.xx.yy）、套 CDN（z2.xx.yy） 来避免被封。
//2、本示例使用不同域名来实现介绍中各应用，其办法如下：
//1）、VLESS+Vision+TLS 仅使用 z1.xx.yy 域名。
//2）、VMess+WebSocket+TLS 仅使用 z2.xx.yy 域名。
//3）、Shadowsocks+gRPC+TLS 仅使用 z2.xx.yy 域名。
