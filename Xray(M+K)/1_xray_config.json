{
  "log": {
    "loglevel": "warning",
    "error": "/var/log/xray/error.log",
    "access": "/var/log/xray/access.log"
  },
  "inbounds": [
    {
      "port": 443, //VLESS+Vision+REALITY 监听端口
      "protocol": "vless",
      "settings": {
        "clients": [
          {
            "id": "048e0bf2-dd56-11e9-aa37-5600024c1d6a", //修改为自己的 UUID
            "flow": "xtls-rprx-vision", //启用 XTLS Vision
            "email": "443@gmail.com"
          }
        ],
        "decryption": "none",
        "fallbacks": [
          {
            "dest": 2015, //回落给 VLESS+H2C 监听端口
            "xver": 2 //开启 PROXY protocol 发送，发送真实来源IP和端口给如下 VLESS+H2C 应用。 1 或 2 表示 PROXY protocol 版本。
          }
        ]
      },
      "streamSettings": {
        "network": "tcp",
        "security": "reality",
        "realitySettings": {
          "show": false, //选填，若为 true 输出调试信息。
          "dest": "xx.yy:443", //转发给自己选定的目标网站。目标网站使用外部的一般为 xx.yy:443 。
          "xver": 0, //选填，默认关闭 PROXY protocol 发送。
          "serverNames": [ //必填，客户端可用的 serverName 列表，暂不支持 * 通配符。
            "xx.yy" //修改为目标网站证书对应的域名
          ],
          "privateKey": "iD0BftokWqJ6UhCzVBlK2sI5OjmfWks0PAdU3SLWKUw", //修改为自己执行 ./xray x25519 后生成的一对密钥中私钥
          "shortIds": [ //必填，客户端可用的 shortId 列表，可用于区分不同的客户端。
            "" //若有此项，客户端 shortId 可为空。若不为空，可 0 到 f（0123456789abcdef），长度为 2 的倍数，长度上限为 16 。
          ]
        }
      },
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "listen": "127.0.0.1", //只监听本机，避免本机外的机器探测到下面端口。
      "port": 2015, //VLESS+H2C 监听端口
      "protocol": "vless",
      "settings": {
        "clients": [
          {
            "id": "048e0bf2-dd56-11e9-aa37-5600024c1d6a", //修改为自己的 UUID
            "email": "2015@gmail.com"
          }
        ],
        "decryption": "none"
      },
      "streamSettings": {
        "network": "h2",
        "security": "none",
        "sockopt": {
          "acceptProxyProtocol": true //开启 PROXY protocol 接收，接收 VLESS+Vision+REALITY 回落前真实来源 IP 和端口。
        }
      },
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    }
  ],
  "routing": {
    "rules": [
      {
        "type": "field",
        "protocol": [
          "bittorrent"
        ],
        "outboundTag": "blocked"
      }
    ]
  },
  "outbounds": [
    {
      "protocol": "freedom",
      "settings": {}
    },
    {
      "tag": "blocked",
      "protocol": "blackhole",
      "settings": {}
    }
  ]
}
